---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by EB.
--- DateTime: 2022/7/4 13:41
---
include "http"
include "http2"
include "redis"
include "mysql"

httpUtil = {}


local dbServer = mysql or {}
function _slinit()
    mysql  = mysql.init("MysqlDB","astest")
    asredis = redis.init("SLR")
end
--function _slinit()
--    local servConf = {
--        -- 请求方法
--        schema = "http/2.0",
--        -- http 服务端地址
--        upstream = {
--        },
--        -- 证书地址
--        certPath = "http://127.0.0.1:14111/eb.cert",
--        -- 超时时间
--        timeout = 10,
--        -- 鉴权模式
--        auth = basic,
--        -- 鉴权信息
--        authInfo = {
--            username = "didiClient",
--            password = "1qaz@WSX"
--        },
--        -- 自定义头部
--        header = {
--            ["Accept-Charset"] = "utf-8",
--            ["Content-Type"] = "text/json"
--        }
--    }
--    didi = http2.init(servConf)
--
--end

function httpUtil.httpsend(Url, Header, Body,method)

    if not  Url then
        return logf("[WARN]:GetUrl fail")
    end

    local Header_tmp = DeepCopy(Header)

    if next(Body)==nil then
        debugf("---now body:%s---",table2jsonOverride(Body))
        Header_tmp["Content-Length"] = 0
    end

    local r
    if method == "POST" then
        --r = didi.post(Url, Header, table2json(Body))
        r = callSmp("egress@sihttp2", "POST /egress_sihttp2?url="..Url, Header_tmp, Body)
    elseif method == "DELETE" then
        --r = didi.delete(Url, Header, table2json(Body))
        r = callSmp("egress@sihttp2", "DELETE /egress_sihttp2?url="..Url, Header_tmp, Body)
    elseif method == "PUT" then
        --r = didi.put(Url, Header,table2json(Body))
        r= callSmp("egress@sihttp2", "PUT /egress_sihttp2?url="..Url, Header_tmp, Body)
    elseif method == "PATCH" then
        --r = didi.send("patch",Url, Header, Body)
        r = callSmp("egress@sihttp2", "PATCH /egress_sihttp2?url="..Url, Header_tmp, Body)
    elseif method == "GET" then
        --r = didi.get(Url, Header, table2json(Body))
        r = callSmp("egress@sihttp2", "GET /egress_sihttp2?url="..Url, Header_tmp, Body)
    end

    local ret = {
        Retn = r.Retn
    }
    if r.Body  then
        if type(r.Body) == "string" then
            ret.Body = json2table(r.Body)
        else
            ret.Body = r.Body
        end
    end
    logf("ret = %s",table2json(ret))
    return ret
end

--send Media side
function httpUtil.httpSendMedia(Url, Header, Body,method)
    if not  Url then
        return logf("[WARN]:GetUrl fail")
    end

    local Header_tmp = DeepCopy(Header)

    if next(Body)==nil then
        debugf("---now body:%s---",table2jsonOverride(Body))
        Header_tmp["Content-Length"] = 0
    end

    local r
    if method == "POST" then
        --r = didi.post(Url, Header, table2json(Body))
        r = callSmp("egress@omhttp2", "POST /egress_omhttp2?url="..Url, Header_tmp, Body)
    elseif method == "DELETE" then
        --r = didi.delete(Url, Header, table2json(Body))
        r = callSmp("egress@omhttp2", "DELETE /egress_omhttp2?url="..Url, Header_tmp, Body)
    elseif method == "PUT" then
        --r = didi.put(Url, Header,table2json(Body))
        r= callSmp("egress@omhttp2", "PUT /egress_omhttp2?url="..Url, Header_tmp, Body)
    elseif method == "PATCH" then
        --r = didi.send("patch",Url, Header, Body)
        r = callSmp("egress@omhttp2", "PATCH /egress_omhttp2?url="..Url, Header_tmp, Body)
    elseif method == "GET" then
        --r = didi.get(Url, Header, table2json(Body))
        r = callSmp("egress@omhttp2", "GET /egress_omhttp2?url="..Url, Header_tmp, Body)
    end

    local ret = {
        Retn = r.Retn
    }
    if r.Body  then
        if type(r.Body) == "string" then
            ret.Body = json2table(r.Body)
        else
            ret.Body = r.Body
        end
    end
    logf("ret = %s",table2json(ret))
    return ret
end

--VONR能力网元内部调用
function httpUtil.sendVonr(SN,url,Header,Body,method)
    --if not notifyUrl then
    --    return logf("get notifyUrl NULL")
    --end

    --local s,e ,url = string.find(notifyUrl,"%a*%:%p*[%d%.]*%:%d*(.*)")   ipv4截取
    --return callSmp(SN, "POST "..url, Body)
    --local s,e= string.find(notifyUrl,"%:%d+%/")
    --local url = string.sub(notifyUrl,e)

    local r
    if method == "POST" then
        --r = didi.post(Url, Header, table2json(Body))
        r = callSmp(SN, "POST "..url,Header, Body)
    elseif method == "DELETE" then
        --r = didi.delete(Url, Header, table2json(Body))
        r = callSmp(SN, "DELETE "..url,Header, Body)
    elseif method == "PUT" then
        --r = didi.put(Url, Header,table2json(Body))
        r= callSmp(SN, "PUT "..url,Header, Body)
    elseif method == "PATCH" then
        --r = didi.send("patch",Url, Header, Body)
        r = callSmp(SN, "PATCH "..url,Header, Body)
    elseif method == "GET" then
        --r = didi.get(Url, Header, table2json(Body))
        r = callSmp(SN, "GET "..url,Header, Body)
    end

    local ret = {
        Retn = r.Retn
    }
    if r.Body  then
        if type(r.Body) == "string" then
            ret.Body = json2table(r.Body)
        else
            ret.Body = r.Body
        end
    end
    logf("ret = %s",table2json(ret))
    return ret
end

